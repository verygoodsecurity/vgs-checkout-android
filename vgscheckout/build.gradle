plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.vanniktech.maven.publish'
    id 'org.jetbrains.dokka'
}
apply from: '../gradle/util.gradle'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        buildConfigField "String", "VERSION_NAME", "\"$VERSION_NAME\""
        createBuildConfigFields(it)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'consumer-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.core:core-ktx:$core_ktx"

    api "com.google.android.material:material:$material"
    api "com.squareup.okhttp3:okhttp:$okHttp"

    testImplementation "junit:junit:$junit"
    testImplementation "androidx.test.ext:junit-ktx:$junit_extension"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "org.robolectric:robolectric:4.7.3"
    testImplementation "org.mockito:mockito-core:4.5.1"
    testImplementation "org.mockito:mockito-inline:4.5.0"
    testImplementation "org.json:json:20220320"
    testImplementation "io.mockk:mockk:1.12.3"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
    androidTestImplementation "androidx.test.ext:junit:$junit_extension"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
    androidTestImplementation "org.mockito:mockito-android:4.5.0"
    androidTestImplementation "androidx.test.ext:junit:$junit_extension"
    androidTestImplementation "androidx.test.ext:junit-ktx:$junit_extension"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

def createBuildConfigFields(buildConfig) {
    def properties = getLocalProperties()
    buildConfig.buildConfigField "String", "PAYMENT_ORCHESTRATION_URL", "\"${properties['PAYMENT_ORCHESTRATION_URL']}\""
    buildConfig.buildConfigField "String", "VAULT_ID", "\"${properties['VAULT_ID']}\""
    buildConfig.buildConfigField "String", "JWT_TOKEN_WITHOUT_TRANSFERS", "\"${properties['JWT_TOKEN_WITHOUT_TRANSFERS']}\""
    buildConfig.buildConfigField "String", "JWT_TOKEN_WITH_TRANSFERS_WRITE", "\"${properties['JWT_TOKEN_WITH_TRANSFERS_WRITE']}\""
    buildConfig.buildConfigField "String", "JWT_TOKEN_WITH_TRANSFERS_ANY", "\"${properties['JWT_TOKEN_WITH_TRANSFERS_ANY']}\""
}

tasks.dokkaHtml.configure {
    outputDirectory.set(rootProject.file('docs'))
}